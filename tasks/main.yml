---
- name: Pgbouncer | Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"
  with_first_found:
    - "{{ ansible_os_family }}.yml"
    - "empty.yml"
  tags: pgbouncer-dependencies

- name: Pgbouncer | Set dependencies
  set_fact:
    pgbouncer_dependencies: "{{ __pgbouncer_dependencies }}"
  when: pgbouncer_dependencies is not defined
  tags: pgbouncer-dependencies

- name: Pgbouncer | Ensure dependencies are installed
  package: "name={{ item }} state=latest"
  with_items: "{{ pgbouncer_dependencies }}"
  tags: pgbouncer-dependencies

- name: Pgbouncer | Ensure pgbouncer group exists
  group: name={{ pgbouncer_run_as_group }} state=present
  tags: pgbouncer-dependencies

- name: Pgbouncer | Ensure pgbouncer user exists
  user:
    name: "{{ pgbouncer_run_as_user }}"
    shell: /bin/true
    group: "{{ pgbouncer_run_as_group }}"
    home: "{{ pgbouncer_conf_file|dirname }}"
    createhome: no
    state: present
  tags: pgbouncer-dependencies

- name: Pgbouncer | Ensure conf dir exists
  file: path={{ pgbouncer_conf_file|dirname }} state=directory mode=0755 owner={{ pgbouncer_run_as_user }} group={{ pgbouncer_run_as_group }}
  tags: pgbouncer-dependencies

- name: Pgbouncer | Ensure socket path exists
  file: path={{ pgbouncer_socket_path }} state=directory mode=2750 owner={{ pgbouncer_run_as_user }} group={{ pgbouncer_run_as_group }}
  tags: pgbouncer-dependencies

- name: Pgbouncer | Ensure log dir exists
  file: path={{ pgbouncer_log_file|dirname }} state=directory mode=2750 owner={{ pgbouncer_run_as_user }} group={{ pgbouncer_run_as_group }}
  tags: pgbouncer-dependencies

- name: Pgbouncer | Ensure log file exists
  file: path={{ pgbouncer_log_file }} state=touch mode=0755 owner={{ pgbouncer_run_as_user }} group={{ pgbouncer_run_as_group }}
  tags: pgbouncer-dependencies

- name: Pgbouncer | Get installed version
  command: pgbouncer -V
  ignore_errors: yes
  changed_when: no
  register: pgbouncer_installed_version
  tags: pgbouncer-install

- set_fact:
    pgbouncer_reinstall: yes
  when:
    - pgbouncer_installed_version.failed | bool
    - '(pgbouncer_installed_version.msg | regex_replace("^.*?([0-9\.]+)$", "\\1")) is version(pgbouncer_version, operator="!=")'
  tags: pgbouncer-install

- block:
    - name: Pgbouncer | Download tarball
      get_url:
        url: "{{ pgbouncer_url }}"
        dest: "{{ pgbouncer_workspace }}/pgbouncer-{{ pgbouncer_version }}.tar.gz"
        checksum: "{{ pgbouncer_checksum }}"

    - name: Pgbouncer | Unpack
      unarchive:
        src: "{{ pgbouncer_workspace }}/pgbouncer-{{ pgbouncer_version }}.tar.gz"
        dest: "{{ pgbouncer_workspace }}"
        creates: "{{ pgbouncer_workspace }}/pgbouncer-{{ pgbouncer_version }}/README.rst"
        copy: no

    - name: Pgbouncer | autogen
      command: ./autogen.sh
      args:
        chdir: "{{ pgbouncer_workspace }}/pgbouncer-{{ pgbouncer_version }}"
        creates: "{{ pgbouncer_workspace }}/pgbouncer-{{ pgbouncer_version }}/autogen"

    - name: Pgbouncer | Configure install
      command: ./configure --with-systemd --prefix={{ pgbouncer_install_path }}
      args:
        chdir: "{{ pgbouncer_workspace }}/pgbouncer-{{ pgbouncer_version }}"
        creates: "{{ pgbouncer_workspace }}/pgbouncer-{{ pgbouncer_version }}/config.log"

    - name: Pgbouncer | Build
      command: make
      args:
        chdir: "{{ pgbouncer_workspace }}/pgbouncer-{{ pgbouncer_version }}"
        creates: "{{ pgbouncer_workspace }}/pgbouncer-{{ pgbouncer_version }}/pgbouncer"

    - name: Pgbouncer | Install
      command: make install
      args:
        chdir: "{{ pgbouncer_workspace }}/pgbouncer-{{ pgbouncer_version }}"

  when: pgbouncer_installed_version.failed|bool or pgbouncer_reinstall
  tags: pgbouncer-install

- name: Pgbouncer | Write configuration file
  template:
    src: "templates/pgbouncer.ini.j2"
    dest: "{{ pgbouncer_conf_file }}"
    owner: root
    group: root
    mode: 0644
  register: pgbouncer_conf
  tags:
    - pgbouncer-install
    - pgbouncer-config

- name: Pgbouncer | Write auth file
  template:
    src: "templates/auth.conf.j2"
    dest: "{{ pgbouncer_auth_file }}"
    owner: root
    group: "{{ pgbouncer_run_as_group }}"
    mode: 0640
  register: pgbouncer_auth
  when:
    - pgbouncer_auth_user is defined
    - pgbouncer_auth_password is defined
  tags:
    - pgbouncer-install
    - pgbouncer-config

- name: Pgbouncer | Write service file
  template:
    src: "templates/pgbouncer.service.j2"
    dest: "/etc/systemd/system/pgbouncer.service"
    owner: root
    group: root
    mode: 0644
  register: pgbouncer_service
  tags:
    - pgbouncer-install
    - pgbouncer-config
    - pgbouncer-systemd

- name: Pgbouncer | Enable and start service
  systemd:
    name: pgbouncer.service
    state: started
    enabled: yes
  tags:
    - pgbouncer-install
    - pgbouncer-config
    - pgbouncer-systemd

- name: Pgbouncer | Reload
  systemd:
    name: pgbouncer.service
    state: reloaded
    daemon_reload: yes
  when: (not pgbouncer_service.changed) and (pgbouncer_conf.changed or pgbouncer_auth.changed)
  tags:
    - pgbouncer-install
    - pgbouncer-config
    - pgbouncer-systemd

- name: Pgbouncer | Restart
  systemd:
    name: pgbouncer.service
    state: restarted
    daemon_reload: yes
  when: pgbouncer_service.changed
  tags:
    - pgbouncer-install
    - pgbouncer-config
    - pgbouncer-systemd
